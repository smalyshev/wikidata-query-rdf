<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.wikidata.query.rdf</groupId>
    <artifactId>parent</artifactId>
    <version>0.2.0-SNAPSHOT</version>
  </parent>
  <artifactId>tools</artifactId>
  <packaging>jar</packaging>

  <name>Wikidata Query RDF Tools</name>
  <description>Tools to sync Wikibase to RDF stores.  Also contains overall integration tests that rely on everything else.</description>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <dependencies>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.wikidata.query.rdf</groupId>
      <artifactId>common</artifactId>
    </dependency>
    <dependency>
      <groupId>com.lexicalscope.jewelcli</groupId>
      <artifactId>jewelcli</artifactId>
      <version>0.8.9</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.10</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.7.10</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-rio-turtle</artifactId>
      <version>${sesame.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.4</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-queryresultio-binary</artifactId>
      <version>${sesame.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-query</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <!-- Tiny http server used with Munge's to option in port style -->
      <groupId>com.nanohttpd</groupId>
      <artifactId>nanohttpd</artifactId>
      <version>2.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.4</version>
    </dependency>
    <dependency>
      <groupId>org.wikidata.query.rdf</groupId>
      <artifactId>testTools</artifactId>
      <version>${project.parent.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>wikidata-query-tools-${project.version}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.carrotsearch.randomizedtesting</groupId>
        <artifactId>junit4-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <id>unpack-blazegraph</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.blazegraph</groupId>
                  <artifactId>bigdata-war</artifactId>
                  <version>${blazegraph.version}</version>
                  <type>war</type>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/blazegraph</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>drop-in-blazegraph-extension</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.wikidata.query.rdf</groupId>
                  <artifactId>common</artifactId>
                  <version>${project.parent.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.wikidata.query.rdf</groupId>
                  <artifactId>blazegraph</artifactId>
                  <version>${project.parent.version}</version>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/blazegraph/WEB-INF/lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
          <execution>
            <id>setup-blazegraph-properties</id>
            <goals>
              <goal>set-system-properties</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <properties>
                <property>
                  <!-- By default Blazegraph's WAR thinks it running in tomcat and uses funky relative paths. They suggest 
                    you overwrite it. We do. -->
                  <name>com.bigdata.rdf.sail.webapp.ConfigParams.propertyFile</name>
                  <value>${project.basedir}/src/test/resources/blazegraph/RWStore.properties</value>
                </property>
                <property>
                  <!-- 100x more than the default form size limit - our updates are reasonably large and it isn't worth breaking 
                    them up. Hopefully. -->
                  <name>org.eclipse.jetty.server.Request.maxFormContentSize</name>
                  <value>20000000</value>
                </property>
                <property>
                  <name>ASTOptimizerClass</name>
                  <value>org.wikidata.query.rdf.blazegraph.WikibaseOptimizers</value>
                </property>
              </properties>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <!-- Copy web.xml from testTools to blazegraph webapp -->
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <!-- force overwrite even if the dest file is newer, in some case web.xml
                 from blazgraph might be newer than our custom web.xml -->
              <overwrite>true</overwrite>
              <outputDirectory>${basedir}/target/blazegraph/WEB-INF</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/../testTools/src/config</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.2.10.v20150310</version>
        <configuration>
          <scanIntervalSeconds>10</scanIntervalSeconds>
          <stopKey>stopblazegraphrightnowplzkthx</stopKey>
          <stopPort>9898</stopPort>
          <scanIntervalSeconds>0</scanIntervalSeconds>
          <httpConnector>
            <port>9999</port>
          </httpConnector>
          <contextHandlers>
            <contextHandler implementation="org.eclipse.jetty.maven.plugin.JettyWebAppContext">
              <!-- TODO a war with the blazegraph extensions -->
              <war>${project.build.directory}/blazegraph</war>
              <contextPath>/bigdata</contextPath>
            </contextHandler>
          </contextHandlers>
        </configuration>
        <executions>
          <execution>
            <id>start-blazegraph</id>
            <phase>pre-integration-test</phase>
            <!-- This complains some because this project _isn't_ a war. But we want to start the Blazegraph war. -->
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-blazegraph</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <id>start-proxy</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <classpathScope>test</classpathScope>
              <mainClass>org.wikidata.query.rdf.tool.Proxy</mainClass>
              <arguments>
                <argument>--port</argument>
                <argument>8812</argument>
                <argument>--error</argument>
                <argument>503</argument>
                <argument>--errorMod</argument>
                <argument>2</argument>
                <argument>--embedded</argument>
                <argument>-v</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>jar-with-dependencies</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>runBlazegraph</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>setup-blazegraph-properties</id>
                <phase>generate-sources</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>run-blazegraph</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
